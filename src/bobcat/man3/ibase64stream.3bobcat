.TH "FBB::IBase64Stream" "3bobcat" "2005\-2014" "libbobcat\-dev_3\&.23\&.01\-x\&.tar\&.gz" "Base64 encoding/decoding std::istream"

.PP 
.SH "NAME"
FBB::IBase64Stream \- Std::istream performing base64 encoding and decoding
.PP 
.SH "SYNOPSIS"
\fB#include <bobcat/ibase64stream>\fP
.br 
Linking option: \fI\-lbobcat\fP 
.PP 
.SH "DESCRIPTION"
\fBFBB::IBase64Stream\fP objects may be used to base64 encode or decrypt
information that is available on a separate \fIstd::istream\fP\&.
.PP 
The \fIclass IBase64Stream\fP is a class template, using a
\fIFBB::CryptType\fP template non\-type parameter\&. Objects of the class 
\fIFBB::IBase64Stream<FBB::ENCODE>\fP base64 encode the information they receive,
objects of the class \fIFBB::IBase64Stream<FBB::DECRYPT>\fP base64 decode the
information they receive\&.
.PP 
.SH "NAMESPACE"
\fBFBB\fP
.br 
All constructors, members, operators and manipulators, mentioned in this
man\-page, are defined in the namespace \fBFBB\fP\&.
.PP 
.SH "INHERITS FROM"
\fBFBB::IBase64Streambuf\fP (private), 
.br 
\fBstd::istream\fP 
.PP 
.SH "CONSTRUCTORS"
.IP o 
\fBIBase64Stream<CryptType>(std::istream &in, size_t bufSize = 100)\fP:
.br 
This constructor initializes a \fIstd::istream\fP providing it with an
\fIFBB::IBase64Streambuf\fP stream buffer\&. The \fIIBase64Streambuf\fP\(cq\&s
constructor receives all arguments that are passed to this constructor\&.
.IP 
\- \fIIBase64Stream<ENCRYPT>\fP objects perform base64 encoding;
.br 
\- \fIIBase64Stream<DECRYPT>\fP objects perform base64 decoding;
.br 
\- \fIIBase64Stream<CryptType>\fP objects obtain the bytes to encode or
decode from \fIstd::istream &in\fP;
.br 
\- The internally used \fIIFilterStreambuf\fP is initialized with a buffer of
size \fIbufSize\fP, using a lower bound of 100\&.

.PP 
.SH "INHERITED MEMBERS"

.PP 
Since the class uses public derivation from \fBstd::istream\fP, all members
of this class can be used\&.
.PP 
.SH "EXAMPLE"
.nf 
#include \(dq\&\&.\&./ibase64stream\(dq\&

#include <iostream>

using namespace std;
using namespace FBB;

int main()
{
    IBase64Stream<ENCRYPT> in(cin);
}

.fi 

.PP 
.SH "FILES"
\fIbobcat/ibase64stream\fP \- defines the class interface
.PP 
.SH "SEE ALSO"
\fBbobcat\fP(7), \fBibase64streambuf\fP(3bobcat)
.PP 
.SH "BUGS"
None Reported\&.
.PP 
.SH "DISTRIBUTION FILES"
.IP o 
\fIbobcat_3\&.23\&.01\-x\&.dsc\fP: detached signature;
.IP o 
\fIbobcat_3\&.23\&.01\-x\&.tar\&.gz\fP: source archive;
.IP o 
\fIbobcat_3\&.23\&.01\-x_i386\&.changes\fP: change log;
.IP o 
\fIlibbobcat1_3\&.23\&.01\-x_*\&.deb\fP: debian package holding the
libraries;
.IP o 
\fIlibbobcat1\-dev_3\&.23\&.01\-x_*\&.deb\fP: debian package holding the
libraries, headers and manual pages;
.IP o 
\fIhttp://sourceforge\&.net/projects/bobcat\fP: public archive location;

.PP 
.SH "BOBCAT"
Bobcat is an acronym of `Brokken\(cq\&s Own Base Classes And Templates\(cq\&\&.
.PP 
.SH "COPYRIGHT"
This is free software, distributed under the terms of the 
GNU General Public License (GPL)\&.
.PP 
.SH "AUTHOR"
Frank B\&. Brokken (\fBf\&.b\&.brokken@rug\&.nl\fP)\&.
.PP 
